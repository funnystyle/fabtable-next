name: Build and Deploy Spring Boot Application

on:
  push:
    branches:
      - master
      - publish

env:
  SERVICE_NAME: fabtable-next
  DEPLOY_PATH: /var/services/homes/fnfworks/docker-app/fabtable-next-${{ github.ref_name }}-docker
  DOCKER_IMAGE_NAME: fabtable-next-${{ github.ref_name }}-docker
  DOCKER_IMAGE_FILE: fabtable-next-${{ github.ref_name }}-docker.tar
#  DOCKER_IMAGE_PORT: 8888

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"

      # Install dependencies
      - name: Install dependencies
        run: npm install
        shell: bash

      # Build
      - name: Build Next.js app
        run: npm run build
        shell: bash

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: docker build -t ${{ env.DOCKER_IMAGE_NAME }}:latest .

      - name: Save Docker image to file
        run: docker save ${{ env.DOCKER_IMAGE_NAME }}:latest -o ${{ env.DOCKER_IMAGE_FILE }}

      - name: Fix permissions for Docker image file
        run: chmod 777 ${{ env.DOCKER_IMAGE_FILE }}

      - name: Ensure deployment directory exists on Synology NAS
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SYNOLOGY_IP }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            mkdir -p ${{ env.DEPLOY_PATH }}/deploy

      - name: Copy Docker image to Synology NAS
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SYNOLOGY_IP }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          source: ${{ env.DOCKER_IMAGE_FILE }}
          target: ${{ env.DEPLOY_PATH }}/deploy

      - name: Copy Script Files to Synology NAS
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SYNOLOGY_IP }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          source: ./deploy/*
          target: ${{ env.DEPLOY_PATH }}

      - name: SSH into Synology NAS and run Deploy Script
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SYNOLOGY_IP }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            echo "${{ secrets.SSH_PASSWORD }}" | sudo -S chmod +x ${{ env.DEPLOY_PATH }}/deploy/common/script.sh
            echo "${{ secrets.SSH_PASSWORD }}" | sudo -S ${{ env.DEPLOY_PATH }}/deploy/common/script.sh ${{ env.SERVICE_NAME }} ${{ github.ref_name }}

      - name: Notify Slack on Success
        if: success() # 이 step은 job이 성공한 경우에만 실행된다.
        id: slack-success
        uses: slackapi/slack-github-action@v1.26.0
        with:
          channel-id: "C077B4DB7BL"
          payload: |
            {
              "attachments": [
                {
                  "title": "${{ github.repository }}",
                  "title_link": "https://github.com/${{github.repository}}",
                  "text": "Fabtable-next.js ${{ github.ref_name }} 배포 성공",
                  "color": "#D6ED17",
                  "fields": [
                    {
                      "title": "Repository",
                      "value": "${{ github.repository }}",
                      "short": true
                    },
                    {
                      "title": "Author",
                      "value": "${{ github.actor }}",
                      "short": true
                    },
                    {
                      "title": "Message",
                      "value": ${{ toJSON(github.event.head_commit.message) }},
                      "short": false
                    }
                  ]      
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: "https://hooks.slack.com/services/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"
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
